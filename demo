import 'package:flutter/material.dart';
import 'package:provider/provider.dart';
import 'package:to_do_list/components/task_list.dart';
import 'package:to_do_list/components/tasks.dart';
import 'package:to_do_list/models/task.dart';
import 'package:flutter_keyboard_visibility/flutter_keyboard_visibility.dart';

import '../models/task_data.dart';
import 'package:provider/provider.dart';

class AddTaskScreen extends StatefulWidget {
  @override
  State<AddTaskScreen> createState() => _AddTaskScreenState();
}

class _AddTaskScreenState extends State<AddTaskScreen> {
  bool isKeyboardVisible = false;

  void initState() {
    super.initState();
    KeyboardVisibilityController().onChange.listen((bool visible) {
      setState(() {
        isKeyboardVisible = visible;
        print(isKeyboardVisible);
      });
    });
  }

  @override
  Widget build(BuildContext context) {
    String? newtaskTitle;
    return SingleChildScrollView(
      child: Container(
          height: isKeyboardVisible
              ? MediaQuery.of(context).viewInsets.bottom + 20
              : 200,
          color: Color(0xff757575),
          child: Container(
            padding: EdgeInsets.all(20),
            decoration: BoxDecoration(
                color: Colors.white,
                borderRadius: BorderRadius.only(
                    topLeft: Radius.circular(30),
                    topRight: Radius.circular(20))),
            // child: Padding(
            // padding: EdgeInsets.only(right: 20, left: 20, top: 20, bottom: 20),
            child: Column(
              crossAxisAlignment: CrossAxisAlignment.stretch,
              children: [
                Text(
                  "Add Task",
                  textAlign: TextAlign.center,
                  style: TextStyle(
                      color: Colors.lightBlueAccent,
                      fontSize: 30,
                      fontWeight: FontWeight.w500),
                ),
                TextField(
                  autofocus: true,
                  textAlign: TextAlign.center,
                  onChanged: (value) {
                    newtaskTitle = value;
                  },
                ),
                ElevatedButton(
                  style: ElevatedButton.styleFrom(
                    primary: Colors.lightBlue,
                  ),
                  onPressed: () {
                    Provider.of<TaskData>(context, listen: false)
                        .addTask(newtaskTitle);

                    Navigator.pop(context);
                  },
                  child: Text(
                    "Add",
                    style: TextStyle(color: Colors.white),
                  ),
                )
              ],
            ),
          )),
    );
  }
}
